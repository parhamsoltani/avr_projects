;/*******************************************************
;This program was created by the
;CodeWizardAVR V3.14 Advanced
;Automatic Program Generator
;© Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
;http://www.hpinfotech.com
;
;Project :
;Version :
;Date    : 8/28/2023
;Author  :
;Company :
;Comments:
;
;
;Chip type               : ATmega32
;Program type            : Application
;AVR Core Clock frequency: 8.000000 MHz
;Memory model            : Small
;External RAM size       : 0
;Data Stack size         : 512
;*******************************************************/
;
;#include <mega32.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x80
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x70
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x60
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x70
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;
;// I2C Bus functions
;#include <i2c.h>
;
;#include <delay.h>
;#include <stdio.h>
;
;#define EEPROM_BUS_ADDRESS 0XA0
;
;// Declare your global variables here
;
;
;unsigned char eeprom_read(unsigned char address)
; 0000 0026  {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 0027  unsigned char data;
; 0000 0028  i2c_start();
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
;	address -> Y+1
;	data -> R17
;PCODE: $00000011 VOL: 0
; 0000 0029  i2c_write(EEPROM_BUS_ADDRESS);
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
; 0000 002A  i2c_write(address);
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
; 0000 002B  i2c_start();
;PCODE: $00000016 VOL: 0
; 0000 002C  i2c_write(EEPROM_BUS_ADDRESS | 1);
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
; 0000 002D  data=i2c_read(0);
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
; 0000 002E  i2c_stop();
;PCODE: $0000001C VOL: 0
; 0000 002F  return data;
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
; 0000 0030  }
;PCODE: $00000022 VOL: 0
;
;void eeprom_write(unsigned char address,unsigned char data)
; 0000 0033  {
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
; 0000 0034  i2c_start();
;PCODE: $00000025 VOL: 0
;	address -> Y+1
;	data -> Y+0
;PCODE: $00000026 VOL: 0
; 0000 0035  i2c_write(EEPROM_BUS_ADDRESS);
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
; 0000 0036  i2c_write(address);
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
; 0000 0037  i2c_write(data);
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
; 0000 0038  i2c_stop();
;PCODE: $0000002D VOL: 0
; 0000 0039  delay_ms(20);   // 10 ms delay to complete the write opertion
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
; 0000 003A  }
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
;
;void main(void)
; 0000 003D {
;PCODE: $00000034 VOL: 0
; 0000 003E // Declare your local variables here
; 0000 003F 
; 0000 0040 // Input/Output Ports initialization
; 0000 0041 // Port D initialization
; 0000 0042 // Function: Bit7=Out Bit6=Out Bit5=Out Bit4=Out Bit3=Out Bit2=Out Bit1=Out Bit0=Out
; 0000 0043 DDRD=(1<<DDD7) | (1<<DDD6) | (1<<DDD5) | (1<<DDD4) | (1<<DDD3) | (1<<DDD2) | (1<<DDD1) | (1<<DDD0);
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
; 0000 0044 // State: Bit7=0 Bit6=0 Bit5=0 Bit4=0 Bit3=0 Bit2=0 Bit1=0 Bit0=0
; 0000 0045 PORTD=(0<<PORTD7) | (0<<PORTD6) | (0<<PORTD5) | (0<<PORTD4) | (0<<PORTD3) | (0<<PORTD2) | (0<<PORTD1) | (0<<PORTD0);
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
; 0000 0046 
; 0000 0047 // Bit-Banged I2C Bus initialization
; 0000 0048 // I2C Port: PORTC
; 0000 0049 // I2C SDA bit: 1
; 0000 004A // I2C SCL bit: 0
; 0000 004B // Bit Rate: 100 kHz
; 0000 004C // Note: I2C settings are specified in the
; 0000 004D // Project|Configure|C Compiler|Libraries|I2C menu.
; 0000 004E i2c_init();
;PCODE: $00000039 VOL: 0
; 0000 004F 
; 0000 0050 while (1)
;PCODE: $0000003A VOL: 0
; 0000 0051       {
; 0000 0052       // Place your code here
; 0000 0053         i2c_init();
;PCODE: $0000003B VOL: 0
; 0000 0054         DDRD=0xff;
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
; 0000 0055         eeprom_write(0x00,0xAA);
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
; 0000 0056         PORTD=eeprom_read(0x00);
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
; 0000 0057 
; 0000 0058       }
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
; 0000 0059 }
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
