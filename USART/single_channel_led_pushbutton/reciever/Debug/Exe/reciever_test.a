;/*******************************************************
;This program was created by the
;CodeWizardAVR V3.14 Advanced
;Automatic Program Generator
;© Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
;http://www.hpinfotech.com
;
;Project :
;Version :
;Date    : 8/14/2023
;Author  :
;Company :
;Comments:
;
;
;Chip type               : ATmega32A
;Program type            : Application
;AVR Core Clock frequency: 8.000000 MHz
;Memory model            : Small
;External RAM size       : 0
;Data Stack size         : 512
;*******************************************************/
;
;#include <mega32a.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x80
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x70
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x60
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x70
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <delay.h>
;
;interrupt[12]void Receive(void)
; 0000 001C {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 001D 
; 0000 001E     UCSRA=(0<<RXC);
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
; 0000 001F 
; 0000 0020 }
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
;
;// Declare your global variables here
;
;// Standard Input/Output functions
;#include <stdio.h>
;
;void usart_init(void)
; 0000 0028 {
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
; 0000 0029 // USART initialization
; 0000 002A // Communication Parameters: 8 Data, 1 Stop, No Parity
; 0000 002B // USART Receiver: On
; 0000 002C // USART Transmitter: Off
; 0000 002D // USART Mode: Asynchronous
; 0000 002E // USART Baud Rate: 9600
; 0000 002F UCSRB=(1<<RXCIE)|(1<<RXEN);
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
; 0000 0030 UCSRC=(1<<URSEL) |(1<<UCSZ1) | (1<<UCSZ0);
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
; 0000 0031 UBRRH=0x00;
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
; 0000 0032 UBRRL=0x33;
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
; 0000 0033 }
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
;
;void main(void)
; 0000 0036 {
;PCODE: $00000020 VOL: 0
; 0000 0037 // Declare your local variables here
; 0000 0038 
; 0000 0039 // Input/Output Ports initialization
; 0000 003A // Port A initialization
; 0000 003B // Function: Bit7=Out Bit6=Out Bit5=Out Bit4=Out Bit3=Out Bit2=Out Bit1=Out Bit0=Out
; 0000 003C DDRA=(1<<DDA7) | (1<<DDA6) | (1<<DDA5) | (1<<DDA4) | (1<<DDA3) | (1<<DDA2) | (1<<DDA1) | (1<<DDA0);
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
; 0000 003D // State: Bit7=0 Bit6=0 Bit5=0 Bit4=0 Bit3=0 Bit2=0 Bit1=0 Bit0=0
; 0000 003E PORTA=(0<<PORTA7) | (0<<PORTA6) | (0<<PORTA5) | (0<<PORTA4) | (0<<PORTA3) | (0<<PORTA2) | (0<<PORTA1) | (0<<PORTA0);
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
; 0000 003F 
; 0000 0040 
; 0000 0041 usart_init();
;PCODE: $00000025 VOL: 0
; 0000 0042 
; 0000 0043 while (1)
;PCODE: $00000026 VOL: 0
; 0000 0044       {
; 0000 0045       // Place your code here
; 0000 0046       while((UCSRA&0x80)==0x00);
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
; 0000 0047       PORTA = UDR;
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
; 0000 0048 
; 0000 0049 
; 0000 004A       }
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
; 0000 004B }
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
