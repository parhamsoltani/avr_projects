;/*******************************************************
;This program was created by the
;CodeWizardAVR V3.14 Advanced
;Automatic Program Generator
;© Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
;http://www.hpinfotech.com
;
;Project :
;Version :
;Date    : 8/23/2023
;Author  :
;Company :
;Comments:
;
;
;Chip type               : ATmega32A
;Program type            : Application
;AVR Core Clock frequency: 8.000000 MHz
;Memory model            : Small
;External RAM size       : 0
;Data Stack size         : 512
;*******************************************************/
;
;#include <mega32a.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x80
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x70
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x60
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x70
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <delay.h>
;
;// I2C Bus functions
;#include <i2c.h>
;
;// Alphanumeric LCD functions
;#include <alcd.h>
;
;// Declare your global variables here
;unsigned char input[13];
;unsigned char i;
;
;void main(void)
; 0000 0026 {

	.CSEG
;PCODE: $0000000D VOL: 0
; 0000 0027 // Declare your local variables here
; 0000 0028 
; 0000 0029 // Bit-Banged I2C Bus initialization
; 0000 002A // I2C Port: PORTC
; 0000 002B // I2C SDA bit: 1
; 0000 002C // I2C SCL bit: 0
; 0000 002D // Bit Rate: 100 kHz
; 0000 002E // Note: I2C settings are specified in the
; 0000 002F // Project|Configure|C Compiler|Libraries|I2C menu.
; 0000 0030 i2c_init();
;PCODE: $0000000E VOL: 0
; 0000 0031 
; 0000 0032 // Alphanumeric LCD initialization
; 0000 0033 // Connections are specified in the
; 0000 0034 // Project|Configure|C Compiler|Libraries|Alphanumeric LCD menu:
; 0000 0035 // RS - PORTB Bit 0
; 0000 0036 // RD - PORTB Bit 1
; 0000 0037 // EN - PORTB Bit 2
; 0000 0038 // D4 - PORTB Bit 4
; 0000 0039 // D5 - PORTB Bit 5
; 0000 003A // D6 - PORTB Bit 6
; 0000 003B // D7 - PORTB Bit 7
; 0000 003C // Characters/line: 16
; 0000 003D lcd_init(16);
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
; 0000 003E lcd_clear();
;PCODE: $00000011 VOL: 0
; 0000 003F 
; 0000 0040 TWAR = 0x32 << 1;
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
; 0000 0041 TWBR = 31;
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
; 0000 0042 
; 0000 0043 
; 0000 0044 while (1)
;PCODE: $00000016 VOL: 0
; 0000 0045       {
; 0000 0046       // Place your code here
; 0000 0047       /*
; 0000 0048         Set TWEA to 1 to Enable Acknowledge
; 0000 0049         Wait for Receive Slave Address
; 0000 004A       */
; 0000 004B         TWCR = 0x44;
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
; 0000 004C         while((TWCR&0x80)==0x00);
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
; 0000 004D         for(i=0;i<12;i++)
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
; 0000 004E         {
; 0000 004F         if(i==11) TWCR = 0x84;
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
; 0000 0050 	    else TWCR = 0xC4;
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
; 0000 0051         while((TWCR&0x80)==0x00);
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
; 0000 0052         input[i] = TWDR;
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
; 0000 0053         }
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
; 0000 0054         TWCR = 0x84;
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
; 0000 0055 
; 0000 0056         lcd_gotoxy(0,0);
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
; 0000 0057         lcd_puts(input);
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
; 0000 0058         delay_ms(1000);
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
; 0000 0059         lcd_clear();
;PCODE: $0000004B VOL: 0
; 0000 005A 
; 0000 005B 
; 0000 005C       }
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
; 0000 005D }
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
